// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TaskStatus {
  PENDING
  COMPLETE
  CANCELLED
}

enum Condition {
  MINT
  GOOD
  POOR
  NEEDS_REPLACEMENT
}

enum Power {
  GAS
  DIESEL
  ELECTRIC
  HYBRID
}

enum VehicleType {
  VEHICLE
  IMPLEMENT
}

model Employee {
  id        String            @id @default(cuid())
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
  name      String
  tasks     MaintenanceTask[]
}

model VehiclePart {
  id        String     @id @default(cuid())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  name      String
  condition Condition?
  hours     Int?
  notes     String?
  vehicle   Vehicle?   @relation(fields: [vehicleId], references: [id])
  vehicleId String
}

model Tool {
  id                String           @id @default(cuid())
  name              String?          @unique
  MaintenanceTask   MaintenanceTask? @relation(fields: [maintenanceTaskId], references: [id])
  maintenanceTaskId String?
}

model MaintenanceGuide {
  id        String            @id @default(cuid())
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
  name      String
  content   String
  tasks     MaintenanceTask[]
  vehicle   Vehicle?          @relation(fields: [vehicleId], references: [id])
  vehicleId String?
}

model MaintenanceTask {
  id           String            @id @default(cuid())
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
  status       TaskStatus        @default(PENDING)
  dueDate      DateTime
  startedAt    DateTime?
  completedAt  DateTime?
  name         String
  machineHours Int?
  notes        String?
  tools        Tool[]
  assigneeId   String?
  assignee     Employee?         @relation(fields: [assigneeId], references: [id])
  vehicle      Vehicle?          @relation(fields: [vehicleId], references: [id])
  vehicleId    String?
  guide        MaintenanceGuide? @relation(fields: [guideId], references: [id])
  guideId      String?
}

model Vehicle {
  id           String             @id @default(cuid())
  name         String?            @unique
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @updatedAt
  vin          String?            @unique
  vehicleType  VehicleType        @default(VEHICLE)
  make         String
  model        String
  machineHours Int?
  link         String?
  power        Power              @default(GAS)
  tasks        MaintenanceTask[]
  guides       MaintenanceGuide[]
  parts        VehiclePart[]
}
