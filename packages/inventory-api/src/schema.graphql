# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Attachment {
  compatibleVehicles: String
  condition: String
  createdAt: DateTime!
  id: String!
  isOwned: Boolean
  name: String!
  updatedAt: DateTime!
}

enum Condition {
  BROKEN
  GOOD
  MINT
  POOR
}

input CreateVehicleDto {
  condition: Condition = GOOD
  link: String
  machineHours: Int
  make: String!
  model: String!
  name: String!
  power: PowerType! = GAS
  vehicleType: VehicleType!
  year: Int
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Employee {
  createdAt: DateTime!
  id: String!
  name: String!
  tasks: [MaintenanceTask!]
  updatedAt: DateTime!
}

type Implement {
  compatibleAttachments: [Attachment!]
  compatibleVehicles: [Vehicle!]
  condition: Condition
  createdAt: DateTime!
  id: String!
  implementType: ImplementType
  isOwned: Boolean
  make: String!
  model: String!
  name: String!
  updatedAt: DateTime!
  year: Int
}

enum ImplementType {
  CHISEL
  CULTIVATOR
  DRILL
  HARROW
  MOWER
  OTHER
  RODWEEDER
  SPRAYER
  TRAILER
}

type MaintenanceGuide {
  content: String!
  createdAt: DateTime!
  id: String!
  name: String!
  tasks: [MaintenanceTask!]
  updatedAt: DateTime!
  vehicle: Vehicle
  vehicleId: String
}

type MaintenanceTask {
  assignee: Employee
  assigneeId: String
  createdAt: DateTime!
  description: String
  dueDate: DateTime!
  guide: MaintenanceGuide
  guideId: String
  id: String!
  machineHours: Int
  name: String!
  status: TaskStatus!
  tools: [Tool!]
  updatedAt: DateTime!
  vehicle: Vehicle
  vehicleId: String
}

type Mutation {
  addVehicle(createVehicleDto: CreateVehicleDto!): Vehicle!
  removeVehicle(id: String!): Boolean!
}

enum PowerType {
  DIESEL
  ELECTRIC
  GAS
  HYBRID
}

type Query {
  employee(id: String!): Employee!
  employees: [Employee!]!
  implement(id: String!): Implement!
  implements(attachmentId: String, vehicleId: String): [Implement!]!
  part(id: String!): VehiclePart!
  parts: [VehiclePart!]!
  vehicle(filters: VehicleQuery, id: String!): Vehicle!
  vehicles(filters: VehicleQuery): [Vehicle!]!
}

enum TaskStatus {
  CANCELLED
  COMPLETED
  INCOMPLETE
}

type Tool {
  id: String!
  name: String!
  tasks: [MaintenanceTask!]
}

type Vehicle {
  compatibleAttachments: [Attachment!]
  compatibleImplements: [Implement!]
  compatibleParts: [VehiclePart!]
  condition: Condition!
  createdAt: DateTime!
  guides: [MaintenanceGuide!]
  id: String!
  isOwned: Boolean
  link: String
  machineHours: Int!
  make: String!
  model: String!
  name: String
  power: PowerType!
  updatedAt: DateTime!
  vehicleType: VehicleType!
  year: Int
}

type VehiclePart {
  compatibleVehicles: [Vehicle!]
  createdAt: DateTime!
  id: String!
  name: String!
  updatedAt: DateTime!
}

input VehicleQuery {
  includeAttachments: Boolean = false
  includeGuides: Boolean = false
  includeImplements: Boolean = false
  includeParts: Boolean = false
}

enum VehicleType {
  ATV
  COMBINE
  OTHER
  SEMITRUCK
  SPRAYER
  TRACTOR
  TRUCK
  UTV
}