// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TaskStatus {
  INCOMPLETE
  COMPLETED
  CANCELLED
}

enum Condition {
  BROKEN
  POOR
  GOOD
  MINT
}

enum PowerType {
  GAS
  DIESEL
  HYBRID
  ELECTRIC
}

enum FuelType {
  GAS
  DIESEL
}

enum VehicleType {
  TRACTOR
  SPRAYER
  COMBINE
  TRUCK
  ATV
  UTV
  SEMITRUCK
  OTHER
}

enum ImplementType {
  SPRAYER
  HARROW
  DRILL
  MOWER
  CULTIVATOR
  CHISEL
  RODWEEDER
  TRAILER
  OTHER
}

enum FuelStorageType {
  TANK
  CAN
  OTHER
}

enum FuelEventAction {
  FILL
  DRAIN
}

model User {
  id           String   @id @default(cuid())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  username     String   @unique
  password     String
  refreshToken String?
  name         String?
}

model FuelEvent {
  id        String          @id @default(cuid())
  timestamp DateTime        @default(now())
  gallons   Int?            @default(0)
  action    FuelEventAction @default(FILL)
  notes     String?

  fuelStorageLocation   FuelStorageLocation? @relation(fields: [fuelStorageLocationId], references: [id])
  fuelStorageLocationId String?
}

model FuelStorageLocation {
  id          String          @id @default(cuid())
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  name        String
  unit        String          @default("gallons")
  quantity    Int?            @default(0)
  capacity    Int?            @default(0)
  storageType FuelStorageType @default(TANK)
  fuelType    FuelType?       @default(DIESEL)
  events      FuelEvent[]
}

model Employee {
  id        String            @id @default(cuid())
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
  name      String
  tasks     MaintenanceTask[]
}

model VehiclePart {
  id                 String    @id @default(cuid())
  createdAt          DateTime  @default(now()) @map("created_at")
  updatedAt          DateTime  @updatedAt @map("updated_at")
  name               String
  compatibleVehicles Vehicle[]
}

model Tool {
  id        String            @id @default(cuid())
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
  name      String
  tasks     MaintenanceTask[]
}

model MaintenanceGuide {
  id           String            @id @default(cuid())
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
  name         String
  content      String
  manual       String?
  machineHours Int               @default(0)
  tasks        MaintenanceTask[]
  vehicleId    String?
  vehicle      Vehicle?          @relation(fields: [vehicleId], references: [id])
}

model MaintenanceTask {
  id          String            @id @default(cuid())
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  status      TaskStatus        @default(INCOMPLETE)
  dueDate     DateTime?
  name        String
  description String?
  tools       Tool[]
  assigneeId  String?
  assignee    Employee?         @relation(fields: [assigneeId], references: [id])
  guide       MaintenanceGuide? @relation(fields: [guideId], references: [id])
  guideId     String?
}

model Vehicle {
  id           String       @id @default(cuid())
  name         String?
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  isOwned      Boolean      @default(true)
  year         Int?
  condition    Condition?   @default(GOOD)
  vehicleType  VehicleType?
  make         String
  model        String
  machineHours Int?
  link         String?
  power        PowerType?   @default(DIESEL)

  guides                MaintenanceGuide[]
  compatibleParts       VehiclePart[]
  compatibleAttachments Attachment[]
  compatibleImplements  Implement[]
}

model Attachment {
  id        String     @id @default(cuid())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  isOwned   Boolean    @default(true)
  name      String
  condition Condition? @default(GOOD)

  compatibleImplements Implement[]
  compatibleVehicles   Vehicle[]
}

model Implement {
  id            String         @id @default(cuid())
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  name          String
  make          String
  model         String
  isOwned       Boolean        @default(true)
  year          Int?
  condition     Condition?     @default(GOOD)
  implementType ImplementType?

  compatibleVehicles    Vehicle[]
  compatibleAttachments Attachment[]
}
