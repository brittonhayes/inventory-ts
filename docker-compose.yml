version: '3.8'
services:
  inventory-proxy:
    image: "traefik:v2.6"
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "8090:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  inventory-api:
    image: ghcr.io/brittonhayes/inventory-api:latest
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      PORT: ${PORT:-5000}
      DB_PORT: ${DB_PORT:-5432}
      DB_HOST: ${DB_HOST:-inventory-db}
      DB_SCHEMA: ${DB_SCHEMA:-inventory}
      DATABASE_URL: postgres://${POSTGRES_USER:-prisma}:${POSTGRES_PASSWORD:-topsecret}@inventory-db:5432/${POSTGRES_DB:-inventory}?schema=${DB_SCHEMA:-inventory}&sslmode=prefer
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.inventory-api.rule=Host(`localhost`) && PathPrefix(`/api`) || PathPrefix(`/graphql`)"
      - "traefik.http.routers.inventory-api.entrypoints=web"
    depends_on:
      - inventory-db

  inventory-ui:
    image: ghcr.io/brittonhayes/inventory-ui:latest
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.inventory-ui.rule=Host(`localhost`)"
      - "traefik.http.routers.inventory-ui.entrypoints=web"

  inventory-db:
    image: postgres:13
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-prisma}
      POSTGRES_DB: ${POSTGRES_DB:-inventory}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-topsecret}
    volumes:
      - postgres:/var/lib/postgresql/data

volumes:
  postgres:
    name: inventory-db
