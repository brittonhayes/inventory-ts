/* tslint:disable */
/* eslint-disable */
/**
 * Open Farms Inventory Service
 * Agriculture inventory management service.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TaskStatus } from './TaskStatus';
import {
    TaskStatusFromJSON,
    TaskStatusFromJSONTyped,
    TaskStatusToJSON,
} from './TaskStatus';

/**
 * 
 * @export
 * @interface CreateMaintenanceTaskDto
 */
export interface CreateMaintenanceTaskDto {
    /**
     * 
     * @type {TaskStatus}
     * @memberof CreateMaintenanceTaskDto
     */
    status: TaskStatus;
    /**
     * 
     * @type {Date}
     * @memberof CreateMaintenanceTaskDto
     */
    dueDate: Date;
    /**
     * 
     * @type {Date}
     * @memberof CreateMaintenanceTaskDto
     */
    startedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof CreateMaintenanceTaskDto
     */
    completedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof CreateMaintenanceTaskDto
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof CreateMaintenanceTaskDto
     */
    machineHours?: number;
    /**
     * 
     * @type {string}
     * @memberof CreateMaintenanceTaskDto
     */
    notes?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateMaintenanceTaskDto
     */
    assigneeId?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateMaintenanceTaskDto
     */
    vehicleId?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateMaintenanceTaskDto
     */
    guideId?: string;
}

/**
 * Check if a given object implements the CreateMaintenanceTaskDto interface.
 */
export function instanceOfCreateMaintenanceTaskDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "dueDate" in value;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function CreateMaintenanceTaskDtoFromJSON(json: any): CreateMaintenanceTaskDto {
    return CreateMaintenanceTaskDtoFromJSONTyped(json, false);
}

export function CreateMaintenanceTaskDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateMaintenanceTaskDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': TaskStatusFromJSON(json['status']),
        'dueDate': (new Date(json['dueDate'])),
        'startedAt': !exists(json, 'startedAt') ? undefined : (new Date(json['startedAt'])),
        'completedAt': !exists(json, 'completedAt') ? undefined : (new Date(json['completedAt'])),
        'name': json['name'],
        'machineHours': !exists(json, 'machineHours') ? undefined : json['machineHours'],
        'notes': !exists(json, 'notes') ? undefined : json['notes'],
        'assigneeId': !exists(json, 'assigneeId') ? undefined : json['assigneeId'],
        'vehicleId': !exists(json, 'vehicleId') ? undefined : json['vehicleId'],
        'guideId': !exists(json, 'guideId') ? undefined : json['guideId'],
    };
}

export function CreateMaintenanceTaskDtoToJSON(value?: CreateMaintenanceTaskDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status': TaskStatusToJSON(value.status),
        'dueDate': (value.dueDate.toISOString()),
        'startedAt': value.startedAt === undefined ? undefined : (value.startedAt.toISOString()),
        'completedAt': value.completedAt === undefined ? undefined : (value.completedAt.toISOString()),
        'name': value.name,
        'machineHours': value.machineHours,
        'notes': value.notes,
        'assigneeId': value.assigneeId,
        'vehicleId': value.vehicleId,
        'guideId': value.guideId,
    };
}

