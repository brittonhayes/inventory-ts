/* tslint:disable */
/* eslint-disable */
/**
 * Open Farms Inventory Service
 * Agriculture inventory management service.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Condition } from './Condition';
import {
    ConditionFromJSON,
    ConditionFromJSONTyped,
    ConditionToJSON,
} from './Condition';

/**
 * 
 * @export
 * @interface UpdateVehiclePartDto
 */
export interface UpdateVehiclePartDto {
    /**
     * 
     * @type {string}
     * @memberof UpdateVehiclePartDto
     */
    name?: string;
    /**
     * 
     * @type {Condition}
     * @memberof UpdateVehiclePartDto
     */
    condition?: Condition;
    /**
     * 
     * @type {number}
     * @memberof UpdateVehiclePartDto
     */
    hours?: number;
    /**
     * 
     * @type {string}
     * @memberof UpdateVehiclePartDto
     */
    notes?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateVehiclePartDto
     */
    vehicleId?: string;
}

/**
 * Check if a given object implements the UpdateVehiclePartDto interface.
 */
export function instanceOfUpdateVehiclePartDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UpdateVehiclePartDtoFromJSON(json: any): UpdateVehiclePartDto {
    return UpdateVehiclePartDtoFromJSONTyped(json, false);
}

export function UpdateVehiclePartDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateVehiclePartDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'condition': !exists(json, 'condition') ? undefined : ConditionFromJSON(json['condition']),
        'hours': !exists(json, 'hours') ? undefined : json['hours'],
        'notes': !exists(json, 'notes') ? undefined : json['notes'],
        'vehicleId': !exists(json, 'vehicleId') ? undefined : json['vehicleId'],
    };
}

export function UpdateVehiclePartDtoToJSON(value?: UpdateVehiclePartDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'condition': ConditionToJSON(value.condition),
        'hours': value.hours,
        'notes': value.notes,
        'vehicleId': value.vehicleId,
    };
}

