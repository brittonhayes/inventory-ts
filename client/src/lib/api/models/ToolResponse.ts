/* tslint:disable */
/* eslint-disable */
/**
 * Open Farms Inventory Service
 * Agriculture inventory management service.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MaintenanceTask } from './MaintenanceTask';
import {
    MaintenanceTaskFromJSON,
    MaintenanceTaskFromJSONTyped,
    MaintenanceTaskToJSON,
} from './MaintenanceTask';

/**
 * 
 * @export
 * @interface ToolResponse
 */
export interface ToolResponse {
    /**
     * 
     * @type {string}
     * @memberof ToolResponse
     */
    id: string;
    /**
     * The name of the tool.
     * @type {string}
     * @memberof ToolResponse
     */
    name?: string;
    /**
     * 
     * @type {MaintenanceTask}
     * @memberof ToolResponse
     */
    maintenanceTask?: MaintenanceTask;
    /**
     * 
     * @type {string}
     * @memberof ToolResponse
     */
    maintenanceTaskId?: string;
}

/**
 * Check if a given object implements the ToolResponse interface.
 */
export function instanceOfToolResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;

    return isInstance;
}

export function ToolResponseFromJSON(json: any): ToolResponse {
    return ToolResponseFromJSONTyped(json, false);
}

export function ToolResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ToolResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'maintenanceTask': !exists(json, 'maintenanceTask') ? undefined : MaintenanceTaskFromJSON(json['maintenanceTask']),
        'maintenanceTaskId': !exists(json, 'maintenanceTaskId') ? undefined : json['maintenanceTaskId'],
    };
}

export function ToolResponseToJSON(value?: ToolResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'maintenanceTask': MaintenanceTaskToJSON(value.maintenanceTask),
        'maintenanceTaskId': value.maintenanceTaskId,
    };
}

